var app,__slice=[].slice;app=angular.module("madacra",["madacra.identity"]);app.config(function($interpolateProvider,$routeProvider){$interpolateProvider.startSymbol("{+");$interpolateProvider.endSymbol("+}");$routeProvider.when("/",{templateUrl:"/partials/login",controller:"LoginController"});$routeProvider.when("/login",{templateUrl:"/partials/login",controller:"LoginController"});$routeProvider.when("/foo",{templateUrl:"/partials/login",controller:"FooController",resolve:{login:loggedInPromise}});$routeProvider.otherwise({redirectTo:"/"});});app.controller("MainController",function($scope,$route,$location,identity){return $scope.$on("$routeChangeError",function(event,d,u,reason){var destinationUrl;if(reason==="notLoggedIn"){destinationUrl=$location.url();$location.path("/login");return $location.search({destination:destinationUrl});}});});app.run(function($rootScope,$timeout,$q){return $rootScope.$waitOnce=function(timeout,events){var deferred,event,eventName,eventsMap,rejectCallback,removalFunctions,removeAll,resolve,resolveCallback,_i,_len;if(Object.isArray(events)){eventsMap={};for(_i=0,_len=events.length;_i<_len;_i++){event=events[_i];eventsMap[event]=true;}
events=eventsMap;}
deferred=$q.defer();removalFunctions=[];removeAll=function(){var removalFunction,_j,_len1,_results;_results=[];for(_j=0,_len1=removalFunctions.length;_j<_len1;_j++){removalFunction=removalFunctions[_j];_results.push(removalFunction());}
return _results;};if(timeout>0){$timeout(function(){removeAll();return deferred.reject({event:"timeout","arguments":[]});},timeout);}
resolveCallback=function(){var args,event;event=arguments[0],args=2<=arguments.length?__slice.call(arguments,1):[];removeAll();return deferred.resolve({event:event.name,"arguments":args});};rejectCallback=function(){var args,event;event=arguments[0],args=2<=arguments.length?__slice.call(arguments,1):[];removeAll();return deferred.reject({event:event.name,"arguments":args});};for(eventName in events){resolve=events[eventName];if(resolve){removalFunctions.push($rootScope.$on(eventName,resolveCallback));}else{removalFunctions.push($rootScope.$on(eventName,rejectCallback));}}
return deferred.promise;};});var module,__bind=function(fn,me){return function(){return fn.apply(me,arguments);};},__slice=[].slice,__indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i;}return-1;};module=angular.module("madacra.socketio",[]);module.factory("socket",function($rootScope){var SocketService;SocketService=(function(){SocketService.name='SocketService';function SocketService(){this.emit=__bind(this.emit,this);this.addEvents=__bind(this.addEvents,this);this.addEvent=__bind(this.addEvent,this);this.socket=io.connect();this.events=[];}
SocketService.prototype.broadcastOnRootScope=function(eventName){return function(){var args;args=1<=arguments.length?__slice.call(arguments,0):[];return $rootScope.$apply(function(){return $rootScope.$broadcast.apply($rootScope,[eventName].concat(__slice.call(args)));});};};SocketService.prototype.getNamespace=function(namespace){if((namespace!=null)&&namespace!==""){return this.socket.of(namespace);}else{return this.socket;}};SocketService.prototype.addEvent=function(namespace,eventName){var name;name=""+namespace+":"+eventName;if(__indexOf.call(this.events,name)<0){return this.getNamespace(namespace).on(eventName,this.broadcastOnRootScope(name));}};SocketService.prototype.addEvents=function(eventMap){var eventName,eventNames,namespace,_results;_results=[];for(namespace in eventMap){eventNames=eventMap[namespace];_results.push((function(){var _i,_len,_results1;_results1=[];for(_i=0,_len=eventNames.length;_i<_len;_i++){eventName=eventNames[_i];_results1.push(this.addEvent(namespace,eventName));}
return _results1;}).call(this));}
return _results;};SocketService.prototype.emit=function(namespace,eventName,data){return this.getNamespace(namespace).emit(eventName,data);};return SocketService;})();return new SocketService();});var loggedInPromise,module,__bind=function(fn,me){return function(){return fn.apply(me,arguments);};};module=angular.module("madacra.identity",["madacra.socketio"]);loggedInPromise=function($q,identity){var result;result=$q.defer();if(identity.isAuthenticated()){result.resolve(true);}else{result.reject("notLoggedIn");}
return result.promise;};module.factory("identity",function($rootScope,$q,$timeout,socket){var IdentityService;IdentityService=(function(){IdentityService.name='IdentityService';function IdentityService(){this.isAuthenticated=__bind(this.isAuthenticated,this);var _this=this;this.token=null;socket.addEvents({"/identity":["changed","loginSuccessful","loginFailed"],"":["connect"]});$rootScope.$on("/identity:changed",function(event,data){return _this.token=data.token;});$rootScope.$on("/identity:loginSuccessful",function(event,data){return _this.token=data.token;});}
IdentityService.prototype.authenticate=function(username,password){return socket.emit("/identity","login",{username:username,password:password});};IdentityService.prototype.isAuthenticated=function(){return this.token!=null;};return IdentityService;})();return new IdentityService();});module.controller("LoginController",function($scope,$rootScope,$route,$location,identity){$scope.loginUsername="";$scope.loginPassword="";return $scope.login=function(){var destination,p;destination=$location.search().destination;identity.authenticate($scope.loginUsername,$scope.loginPassword);p=$rootScope.$waitOnce(10000,{"/identity:loginSuccessful":true,"/identity:loginFailed":false});return p.then(function(){if(destination!=null){return $location.url(destination);}else{return $route.reload();}},function(){return console.log("fail");});};});